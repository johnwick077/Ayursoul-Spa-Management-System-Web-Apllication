Database 

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fname VARCHAR(50),
    lname VARCHAR(50),
    email VARCHAR(100) UNIQUE,
    dob DATE,
    gender ENUM('male', 'female', 'other'),
    FOREIGN KEY (appointment_id) REFERENCES appointments(appointment_id)
);
CREATE TABLE users (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    fname VARCHAR(50) COLLATE utf8mb4_0900_ai_ci NOT NULL,
    lname VARCHAR(50) COLLATE utf8mb4_0900_ai_ci NOT NULL,
    email VARCHAR(100) COLLATE utf8mb4_0900_ai_ci NOT NULL UNIQUE,
    email_verification_token VARCHAR(255) COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
    dob DATE NOT NULL,
    gender VARCHAR(10) COLLATE utf8mb4_0900_ai_ci NOT NULL,
    password VARCHAR(255) COLLATE utf8mb4_0900_ai_ci NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    email_verified TINYINT(1) DEFAULT 0,
    reset_token VARCHAR(255) COLLATE utf8mb4_0900_ai_ci DEFAULT NULL
);
`

CREATE TABLE guests (
    guest_id INT AUTO_INCREMENT PRIMARY KEY,
    appointment_id INT,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    gender ENUM('male', 'female', 'other'),
    FOREIGN KEY (appointment_id) REFERENCES appointments(appointment_id)
);

-- Table to store appointments
CREATE TABLE appointments (
    appointment_id INT AUTO_INCREMENT PRIMARY KEY,
    appointment_date DATE NOT NULL,
    selected_time VARCHAR(50) NULL,
    service_name VARCHAR(100) NOT NULL,
    service_price DECIMAL(10, 2) NOT NULL,
    booking_status ENUM('Pending', 'Confirmed', 'Cancelled', 'Failed') DEFAULT 'Pending',
    payment_status VARCHAR(50) DEFAULT 'pending',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    email VARCHAR(100) NULL
);


-- Table to store services (optional, if you want predefined services)
CREATE TABLE services (
    service_id INT AUTO_INCREMENT PRIMARY KEY,
    category VARCHAR(50),
    service_name VARCHAR(100),
    service_price DECIMAL(10, 2)
);
